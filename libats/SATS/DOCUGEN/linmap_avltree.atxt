(* ****** ****** *)

%{
implement srcfilename_get () = "../linmap_avltree.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_linmap_avltree")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/linmap_avltree\
")

(* ****** ****** *)

#declpreamble("\

#para("\

This package implements linear maps based on the AVL-tree structure.  Note
that such maps are particularly efficient for supporting search operations.

")

")

(* ****** ****** *)

#declnamesynop("map")
#decldescrpt("\

The type constructor #stacode("map") is a shorthand for
#stacode("map_vtype").  ")

#declnamesynop("map_vtype")
#decldescrpt("\

Given a type K and a viewtype T, the abstract viewtype
#stacode("map_vtype(K, T)") is for a map storing links from keys of the
type K to items of the viewtype T. Note that #stacode("map_vtype") is
co-variant in its second argument.\

")

(* ****** ****** *)

#declnamesynop("compare_key_key")
#decldescrpt("This function is for comparing map keys.")

(* ****** ****** *)

#declnamesynop("linmap_nil")
#decldescrpt("This function creates an empty map.")

(* ****** ****** *)

#declnamesynop("linmap_is_nil")
#decldescrpt("This function tests whether a given map is empty.")
#declnamesynop("linmap_isnot_nil")
#decldescrpt("This function tests whether a given map is non-empty.")

(* ****** ****** *)

#declnamesynop("linmap_search")
#declnamesynop("linmap_search_ref")
#declnamesynop("linmap_search_opt")

(* ****** ****** *)

#declnamesynop("linmap_insert")
#declnamesynop("linmap_insert_opt")
#decldescrpt("\

This function is the optional version of #dyncode("linmap_insert").\

")

(* ****** ****** *)

#declnamesynop("linmap_takeout")
#declnamesynop("linmap_takeout_opt")
#declnamesynop("linmap_remove")

(* ****** ****** *)

#declnamesynop("linmap_foreach")
#declnamesynop("linmap_foreach_env")
#declnamesynop("linmap_foreach$fwork")

(* ****** ****** *)

#declnamesynop("linmap_free")
#decldescrpt("\

This function frees a given map containing only non-linear items. ")

(* ****** ****** *)

#declnamesynop("linmap_freelin")
#declnamesynop("linmap_freelin$clear")

(* ****** ****** *)

#declnamesynop("linmap_free_ifnil")
#decldescrpt("\

Given a map, this function frees it and returns false if the map is empty.
Otherwise, the function keeps the map and returns true. ")

(* ****** ****** *)

#declnamesynop("linmap_listize")
#declnamesynop("linmap_flistize")
#declnamesynop("linmap_flistize$opr")

(* ****** ****** *)

#declnamesynop("linmap_listize1")

(* ****** ****** *)

#declnamesynop("linmap_avltree_height")
#decldescrpt("\

Given a map (represented by some AVL-tree), this function returns the
height the AVL-tree.\

")

(* ****** ****** *)

(* end of [linmap_avltree.atxt] *)
